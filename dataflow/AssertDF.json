{
	"name": "AssertDF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Employee",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "assert1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as short,",
				"          name as string,",
				"          salary as short,",
				"          deptid as short,",
				"          country as string,",
				"          joindate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'input',",
				"     fileName: 'dept.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source2",
				"source1, source2 assert(expectTrue(!isNull(toDate(joindate, 'ddMMyyyy')), false, 'assertJoiningDate', null, 'This is to assert if there are any issues with joining date '),",
				"     expectExists(deptid == ERROR_FUNCTION(''), false, 'assertDept'),",
				"     expectUnique(ERROR_FUNCTION(''), false, 'assert3')) ~> assert1"
			]
		}
	}
}